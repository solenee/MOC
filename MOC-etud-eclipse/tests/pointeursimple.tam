; Generated code for tests/pointeursimple.moc.
; Do not modify by hand
	; code in inline : start
; inline code_asm


	CALL (LB) _main


	HALT


	; code in inline : end
_main:
	; declaration de a de taille 1 en [3/Register [name=LB, num=0]]
	PUSH 1
	LOADL 1	; entier
	STORE(1) 3[LB]
	; fin de declaration de a
	; declaration de b de taille 1 en [4/Register [name=LB, num=0]]
	PUSH 1
	LOADL 2	; entier
	STORE(1) 4[LB]
	; fin de declaration de b
	; declaration de c de taille 1 en [5/Register [name=LB, num=0]]
	PUSH 1
	LOADL 3	; entier
	STORE(1) 5[LB]
	; fin de declaration de c
	; declaration de d de taille 1 en [6/Register [name=LB, num=0]]
	PUSH 1
	LOADL 4	; entier
	STORE(1) 6[LB]
	; fin de declaration de d
	; acces a b
	; lecture du contenu de l'adresse de [4/Register [name=LB, num=0]]
	LOADA 4[LB]
	; valeur affectee
	; acces a c
	; lecture du contenu de l'adresse de [5/Register [name=LB, num=0]]
	LOADA 5[LB]
	; lecture indirecte
	LOADI (1)
	; affectation
	STOREI (1)
	; acces a a
	; acces a d
	; lecture du contenu de l'adresse de [6/Register [name=LB, num=0]]
	LOADA 6[LB]
	; lecture indirecte
	LOADI (1)
	; lecture indirecte
	LOADI (1)
	STORE(1) 3[LB]
	; retour
	; pas d'affectation : code de l'expression
	; acces a a
	LOAD (1) 3[LB]
	RETURN (1) 0
	; fin retour
	; fin d'un bloc : pop
	POP(0) 4

